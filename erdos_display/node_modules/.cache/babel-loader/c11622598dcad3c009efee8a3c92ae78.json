{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport store from '../store/index';\nimport * as d3 from 'd3';\nconst w = window.innerWidth;\nconst h = window.innerHeight;\n\nclass ForceGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.author = store.getState().author.data;\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      this.drawForceGraph(nodes, links);\n      console.log(this.author);\n    };\n\n    this.drawForceGraph = (nodes, links) => {\n      let width = w;\n      let height = h;\n\n      function ticked() {\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n        node.attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        });\n      }\n\n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      function getNodeColor(node) {\n        //return node.name === this.props.parent.data ? 'red' : '#0099ff'\n        return '#0099ff';\n      }\n\n      let svgCanvas = d3.select(this.refs.canvas).append('svg').attr('width', width).attr('height', height);\n      let simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      let link = svgCanvas.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(links).attr(\"stroke\", \"#aaa\").enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value) / 4;\n      });\n      let node = svgCanvas.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        return Math.sqrt(d.pubs) * 1.5;\n      }).call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n      svgCanvas.style(\"stroke\", \"#aaa\").attr(\"fill\", getNodeColor);\n      node.append(\"title\").text(function (d) {\n        let dc = '';\n        let name = ';';\n\n        if (d.name.indexOf('*') !== -1) {\n          name = d.name.replace('*', '');\n          dc = ' (DECEASED)';\n        } else {\n          name = d.name;\n        }\n\n        name = name.concat(dc);\n        let text = name.concat(\"\\n \");\n        text = text.concat(d.pubs);\n        text = text.concat(\" Coauthor(s) with Erdos number 2\");\n        return text;\n      });\n      simulation.nodes(nodes).on(\"tick\", ticked);\n      simulation.force(\"link\").links(links);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph;","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","store","d3","w","window","innerWidth","h","innerHeight","ForceGraph","constructor","props","author","getState","data","componentDidMount","nodes","links","drawForceGraph","console","log","width","height","ticked","link","attr","d","source","x","y","target","node","dragstarted","event","active","simulation","alphaTarget","restart","fx","fy","dragged","dragended","getNodeColor","svgCanvas","select","refs","canvas","append","forceSimulation","force","forceLink","id","forceManyBody","forceCenter","selectAll","enter","Math","sqrt","value","pubs","call","drag","on","style","text","dc","name","indexOf","replace","concat","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport store from '../store/index';\nimport * as d3 from 'd3';\n\nconst w = window.innerWidth\nconst h = window.innerHeight\n\nclass ForceGraph extends Component {\n\n    constructor(props) {\n      super(props);\n          this.state = {\n          }\n    };\n\n    author = store.getState().author.data;\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      \n      this.drawForceGraph(nodes, links);\n      console.log(this.author);\n    }\n\n    drawForceGraph = (nodes, links)  => {\n      let width = w;\n      let height = h;\n\n      function ticked() {\n        link\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n    \n        node\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n      }\n    \n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n      }\n      \n      function dragged(d) {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n      }\n      \n      function dragended(d) {\n          if (!d3.event.active) simulation.alphaTarget(0);\n              d.fx = null;\n              d.fy = null;\n      }\n\n      function getNodeColor(node) {\n        //return node.name === this.props.parent.data ? 'red' : '#0099ff'\n        return('#0099ff')\n      }\n \n      let svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height);\n\n      let simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n      let link = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"links\")\n                          .selectAll(\"line\")\n                          .data(links)\n                          .attr(\"stroke\", \"#aaa\")\n                          .enter().append(\"line\")\n                          .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 4; });\n                         \n      let node = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"nodes\")\n                          .selectAll(\"circle\")\n                          .data(nodes)\n                          .enter().append(\"circle\")\n                          .attr(\"r\", function(d) {\n                                      return Math.sqrt(d.pubs)*1.5;\n                          })\n                          .call(d3.drag()\n                          .on(\"start\", dragstarted)\n                          .on(\"drag\", dragged)\n                          .on(\"end\", dragended));\n\n      svgCanvas.style(\"stroke\", \"#aaa\")\n               .attr(\"fill\", getNodeColor);\n\n\n      node.append(\"title\")\n          .text(function(d) {\n              let dc = '';\n              let name = ';'\n              if (d.name.indexOf('*') !== -1) {\n                name = d.name.replace('*', '');\n                dc = ' (DECEASED)';\n              }\n              else {\n                name = d.name;\n              }\n              name = name.concat(dc);\n              let text = name.concat(\"\\n \");\n              text = text.concat(d.pubs);\n              text = text.concat(\" Coauthor(s) with Erdos number 2\");\n              return text;\n          });\n\n      simulation.nodes(nodes)\n                .on(\"tick\", ticked);\n\n      simulation.force(\"link\")\n                .links(links);\n\n    }\n\n    render() { \n\n      return (\n        <div ref=\"canvas\"></div>\n      )\n    };\n\n}\n\nexport default ForceGraph;\n"]},"metadata":{},"sourceType":"module"}