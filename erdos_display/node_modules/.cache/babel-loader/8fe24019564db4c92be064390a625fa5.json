{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nconst w = 1283;\nconst h = 1000; //const h = document.getElementById(\"#force\").innerHeight\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      this.drawForceGraph(nodes, links);\n    };\n\n    this.drawForceGraph = (nodes, links) => {\n      //console.log(nodes);\n      //console.log(links);\n      //let width = w;\n      //let height = h;\n      function ticked() {\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n        node.attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        });\n      }\n\n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      var svgCanvas = d3.select(this.refs.canvas),\n          width = +svg.attr(\"width\"),\n          height = +svg.attr(\"height\");\n      /*let svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height);*/\n\n      let simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      let node = svgCanvas.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        return Math.sqrt(d.pubs) * 1.5;\n      }).style(\"stroke\", \"gray\").attr(\"fill\", \"#0099ff\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n      let link = svgCanvas.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(links).attr(\"stroke\", \"#aaa\").enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value) / 4;\n      });\n      node.append(\"title\").text(function (d) {\n        let dc = '';\n        let name = ';';\n\n        if (d.name.indexOf('*') !== -1) {\n          name = d.name.replace('*', '');\n          dc = ' (DECEASED)';\n        } else {\n          name = d.name;\n        } //let p = name.split(',');\n        //name = p[1].concat(' ');\n        //name = name.concat(p[0]);\n\n\n        name = name.concat(dc);\n        let text = name.concat(\"\\n \");\n        text = text.concat(d.pubs);\n        text = text.concat(\" Coauthor(s) with Erdos number 2\");\n        return text;\n      });\n      simulation.nodes(nodes).on(\"tick\", ticked);\n      simulation.force(\"link\").links(links);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph;","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","w","h","ForceGraph","componentDidMount","nodes","props","data","links","drawForceGraph","ticked","link","attr","d","source","x","y","target","node","dragstarted","event","active","simulation","alphaTarget","restart","fx","fy","dragged","dragended","svgCanvas","select","refs","canvas","width","svg","height","forceSimulation","force","forceLink","id","forceManyBody","forceCenter","append","selectAll","enter","Math","sqrt","pubs","style","call","drag","on","value","text","dc","name","indexOf","replace","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nconst w = 1283;\nconst h = 1000;\n//const h = document.getElementById(\"#force\").innerHeight\n\nclass ForceGraph extends Component {\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      \n      this.drawForceGraph(nodes, links);\n    }\n\n    drawForceGraph = (nodes, links)  => {\n      //console.log(nodes);\n      //console.log(links);\n      //let width = w;\n      //let height = h;\n\n      function ticked() {\n        link\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n    \n        node\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n      }\n    \n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n      }\n      \n      function dragged(d) {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n      }\n      \n      function dragended(d) {\n          if (!d3.event.active) simulation.alphaTarget(0);\n              d.fx = null;\n              d.fy = null;\n      }\n\n      var svgCanvas = d3.select(this.refs.canvas),\n                    width =+ svg.attr(\"width\"),\n                    height =+ svg.attr(\"height\");\n \n      /*let svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height);*/\n\n\n\n      let simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n                         \n      let node = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"nodes\")\n                          .selectAll(\"circle\")\n                          .data(nodes)\n                          .enter().append(\"circle\")\n                          .attr(\"r\", function(d) {\n                                      return Math.sqrt(d.pubs)*1.5;\n                          })\n                          .style(\"stroke\", \"gray\")\n                          .attr(\"fill\", \"#0099ff\")\n                          .call(d3.drag()\n                          .on(\"start\", dragstarted)\n                          .on(\"drag\", dragged)\n                          .on(\"end\", dragended));\n\n      let link = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"links\")\n                          .selectAll(\"line\")\n                          .data(links)\n                          .attr(\"stroke\", \"#aaa\")\n                          .enter().append(\"line\")\n                          .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 4; });\n\n      node.append(\"title\")\n          .text(function(d) {\n              let dc = '';\n              let name = ';'\n              if (d.name.indexOf('*') !== -1) {\n                name = d.name.replace('*', '');\n                dc = ' (DECEASED)';\n              }\n              else {\n                name = d.name;\n              }\n              //let p = name.split(',');\n              //name = p[1].concat(' ');\n              //name = name.concat(p[0]);\n              name = name.concat(dc);\n              let text = name.concat(\"\\n \");\n              text = text.concat(d.pubs);\n              text = text.concat(\" Coauthor(s) with Erdos number 2\");\n              return text;\n          });\n\n      simulation.nodes(nodes)\n                .on(\"tick\", ticked);\n\n      simulation.force(\"link\")\n                .links(links);\n\n    }\n\n    render() { \n\n      return (\n        <div ref=\"canvas\"></div> \n      )\n    };\n\n}\n\nexport default ForceGraph;\n"]},"metadata":{},"sourceType":"module"}