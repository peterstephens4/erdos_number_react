{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      const data = [nodes, links]; //const json = JSON.stringify(d); \n\n      this.drawForceGraph(data, nodes, links);\n    };\n\n    this.drawForceGraph = (data, nodes, links) => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      let svgCanvas = d3.select(this.refs.canvas).append('svg').attr('width', width).attr('height', height).style('border', '1px solid black');\n      let simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      let link = svgCanvas.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(links).enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value) / 4;\n      });\n      let node = svgCanvas.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        return Math.sqrt(d.pubs) * 1.5;\n      }).attr(\"fill\", \"#0099ff\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph;","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","ForceGraph","componentDidMount","nodes","props","data","links","drawForceGraph","width","height","scale","svgCanvas","select","refs","canvas","append","attr","style","simulation","forceSimulation","force","forceLink","id","d","forceManyBody","forceCenter","link","selectAll","enter","Math","sqrt","value","node","pubs","call","drag","on","dragstarted","dragged","dragended","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BG,iBAF+B,GAEX,MAAM;AACxB,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAA5B;AACA,UAAIG,KAAK,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,KAA5B;AACA,YAAMD,IAAI,GAAG,CAACF,KAAD,EAAQG,KAAR,CAAb,CAHwB,CAIxB;;AACA,WAAKC,cAAL,CAAoBF,IAApB,EAA0BF,KAA1B,EAAiCG,KAAjC;AACD,KAR8B;;AAAA,SAU/BC,cAV+B,GAUd,CAACF,IAAD,EAAOF,KAAP,EAAcG,KAAd,KAAyB;AACxC;AACA;AACA,YAAME,KAAK,GAAG,IAAd;AACA,YAAMC,MAAM,GAAG,GAAf;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,UAAIC,SAAS,GAAGX,EAAE,CAACY,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACKC,MADL,CACY,KADZ,EAEKC,IAFL,CAEU,OAFV,EAEmBR,KAFnB,EAGKQ,IAHL,CAGU,QAHV,EAGoBP,MAHpB,EAIKQ,KAJL,CAIW,QAJX,EAIqB,iBAJrB,CAAhB;AAMA,UAAIC,UAAU,GAAIlB,EAAE,CAACmB,eAAH,GACGC,KADH,CACS,MADT,EACiBpB,EAAE,CAACqB,SAAH,GAAeC,EAAf,CAAkB,UAASC,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACD,EAAT;AAAc,OAA9C,CADjB,EAEGF,KAFH,CAES,QAFT,EAEmBpB,EAAE,CAACwB,aAAH,EAFnB,EAGGJ,KAHH,CAGS,QAHT,EAGmBpB,EAAE,CAACyB,WAAH,CAAejB,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,CAHnB,CAAlB;AAKA,UAAIiB,IAAI,GAAGf,SAAS,CAACI,MAAV,CAAiB,GAAjB,EACUC,IADV,CACe,OADf,EACwB,OADxB,EAEUW,SAFV,CAEoB,MAFpB,EAGUtB,IAHV,CAGeC,KAHf,EAIUsB,KAJV,GAIkBb,MAJlB,CAIyB,MAJzB,EAKUC,IALV,CAKe,cALf,EAK+B,UAASO,CAAT,EAAY;AAAE,eAAOM,IAAI,CAACC,IAAL,CAAUP,CAAC,CAACQ,KAAZ,IAAqB,CAA5B;AAAgC,OAL7E,CAAX;AAOA,UAAIC,IAAI,GAAGrB,SAAS,CAACI,MAAV,CAAiB,GAAjB,EACUC,IADV,CACe,OADf,EACwB,OADxB,EAEUW,SAFV,CAEoB,QAFpB,EAGUtB,IAHV,CAGeF,KAHf,EAIUyB,KAJV,GAIkBb,MAJlB,CAIyB,QAJzB,EAKUC,IALV,CAKe,GALf,EAKoB,UAASO,CAAT,EAAY;AACX,eAAOM,IAAI,CAACC,IAAL,CAAUP,CAAC,CAACU,IAAZ,IAAkB,GAAzB;AACX,OAPV,EAQUjB,IARV,CAQe,MARf,EAQuB,SARvB,EASUkB,IATV,CASelC,EAAE,CAACmC,IAAH,GACLC,EADK,CACF,OADE,EACOC,WADP,EAELD,EAFK,CAEF,MAFE,EAEME,OAFN,EAGLF,EAHK,CAGF,KAHE,EAGKG,SAHL,CATf,CAAX;AAeD,KAjD8B;AAAA;;AAmD/BC,EAAAA,MAAM,GAAG;AAEP,wBACA;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGD;;AAxD8B;;AA4DnC,eAAevC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\n\nclass ForceGraph extends Component {\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      const data = [nodes, links];\n      //const json = JSON.stringify(d); \n      this.drawForceGraph(data, nodes, links)\n    }\n\n    drawForceGraph = (data, nodes, links)  => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      let svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height)\n                          .style('border', '1px solid black');\n\n      let simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n      let link = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"links\")\n                          .selectAll(\"line\")\n                          .data(links)\n                          .enter().append(\"line\")\n                          .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 4; });\n                          \n      let node = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"nodes\")\n                          .selectAll(\"circle\")\n                          .data(nodes)\n                          .enter().append(\"circle\")\n                          .attr(\"r\", function(d) {\n                                      return Math.sqrt(d.pubs)*1.5;\n                          })\n                          .attr(\"fill\", \"#0099ff\")\n                          .call(d3.drag()\n                          .on(\"start\", dragstarted)\n                          .on(\"drag\", dragged)\n                          .on(\"end\", dragended)\n                          );\n\n    }\n\n    render() { \n\n      return (\n      <div ref=\"canvas\"></div> \n      )\n    };\n\n}\n\nexport default ForceGraph;\n"]},"metadata":{},"sourceType":"module"}