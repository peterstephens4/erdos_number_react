{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      let data = [nodes, links];\n      console.log(data); //const data = [ 2, 4, 2, 6, 8 ]\n\n      this.drawForceGraph(data, nodes, links);\n    };\n\n    this.drawForceGraph = (data, nodes, links) => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      const svgCanvas = d3.select(this.refs.canvas).append('svg').attr('width', width).attr('height', height).style('border', '1px solid black');\n      const simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph;","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","ForceGraph","componentDidMount","nodes","props","data","links","console","log","drawForceGraph","width","height","scale","svgCanvas","select","refs","canvas","append","attr","style","simulation","forceSimulation","force","forceLink","id","d","forceManyBody","forceCenter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BG,iBAF+B,GAEX,MAAM;AACxB,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAA5B;AACA,UAAIG,KAAK,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,KAA5B;AACA,UAAID,IAAI,GAAG,CAACF,KAAD,EAAQG,KAAR,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJwB,CAKxB;;AACA,WAAKI,cAAL,CAAoBJ,IAApB,EAA0BF,KAA1B,EAAiCG,KAAjC;AACD,KAT8B;;AAAA,SAW/BG,cAX+B,GAWd,CAACJ,IAAD,EAAOF,KAAP,EAAcG,KAAd,KAAyB;AACxC;AACA;AACA,YAAMI,KAAK,GAAG,IAAd;AACA,YAAMC,MAAM,GAAG,GAAf;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMC,SAAS,GAAGb,EAAE,CAACc,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACGC,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiBR,KAFjB,EAGGQ,IAHH,CAGQ,QAHR,EAGkBP,MAHlB,EAIGQ,KAJH,CAIS,QAJT,EAImB,iBAJnB,CAAlB;AAMA,YAAMC,UAAU,GAAIpB,EAAE,CAACqB,eAAH,GACCC,KADD,CACO,MADP,EACetB,EAAE,CAACuB,SAAH,GAAeC,EAAf,CAAkB,UAASC,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACD,EAAT;AAAc,OAA9C,CADf,EAECF,KAFD,CAEO,QAFP,EAEiBtB,EAAE,CAAC0B,aAAH,EAFjB,EAGCJ,KAHD,CAGO,QAHP,EAGiBtB,EAAE,CAAC2B,WAAH,CAAejB,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,CAHjB,CAApB;AAOD,KA9B8B;AAAA;;AAgC/BiB,EAAAA,MAAM,GAAG;AAEP,wBACA;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGD;;AArC8B;;AAyCnC,eAAe3B,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\n\nclass ForceGraph extends Component {\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      let data = [nodes, links];\n      console.log(data);\n      //const data = [ 2, 4, 2, 6, 8 ]\n      this.drawForceGraph(data, nodes, links)\n    }\n\n    drawForceGraph = (data, nodes, links)  => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      const svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height)\n                          .style('border', '1px solid black');\n\n      const simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n\n\n    }\n\n    render() { \n\n      return (\n      <div ref=\"canvas\"></div> \n      )\n    };\n\n}\n\nexport default ForceGraph;\n"]},"metadata":{},"sourceType":"module"}