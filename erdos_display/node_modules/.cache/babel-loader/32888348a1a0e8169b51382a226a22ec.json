{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport api from './api';\nimport Main from \"./components/Main\";\nimport { PWS } from \"./components/PWS\";\nimport About from \"./components/About\";\nimport './App.css';\n\nfunction App() {\n  const [authors, setAuthors] = useState({});\n\n  const loadData = async () => {\n    const res = await api.getAllAuthors();\n    setAuthors((await convertToJSON(res.data.data)));\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n\n  const pwsView = props => /*#__PURE__*/React.createElement(PWS, Object.assign({}, props, {\n    authors: authors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 30\n    }\n  }));\n\n  const mainView = props => /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }\n  }));\n\n  const aboutView = props => /*#__PURE__*/React.createElement(About, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AppContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: pwsView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    render: aboutView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;\n\nfunction convertToJSON(a) {\n  let nodes = [];\n  let links = [];\n\n  for (let i = 0; i < a.length; i++) {\n    let name = a[i].name;\n    let id = a[i].vertex;\n    let group = a[i].degree;\n    let pubs = a[i].colaborators;\n    let adj = a[i].adj;\n    let data = {\n      \"id\": id,\n      \"name\": name,\n      \"group\": group,\n      \"pubs\": pubs\n    };\n    nodes.push(data);\n\n    for (let j = 0; j < adj.length; j++) {\n      let source = id;\n      let target = adj[j];\n      let value = pubs;\n      let data = {\n        \"source\": source,\n        \"target\": target,\n        \"value\": value\n      };\n      links.push(data);\n    }\n  }\n\n  let json = {\n    'nodes': nodes,\n    'links': links\n  };\n  return json;\n} //  https://blog.logrocket.com/react-router-dom-set-up-essential-components-parameterized-routes-505dc93642f1/\n//  https://oakland.edu/enp/","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Redirect","api","Main","PWS","About","App","authors","setAuthors","loadData","res","getAllAuthors","convertToJSON","data","pwsView","props","mainView","aboutView","a","nodes","links","i","length","name","id","vertex","group","degree","pubs","colaborators","adj","push","j","source","target","value","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport api from './api';\nimport Main from \"./components/Main\";\nimport {PWS} from \"./components/PWS\";\nimport About from \"./components/About\";\nimport './App.css';\n\nfunction App() {\n\n  const [authors, setAuthors] = useState({});\n  const loadData = async () => {\n      const res = await api.getAllAuthors();\n      setAuthors(await convertToJSON(res.data.data));\n    };\n\n  useEffect(() => {\n      loadData();\n      return () => {};\n    }, []);\n  \n  const pwsView = (props) => <PWS {...props} authors={authors}/>\n  const mainView = (props) => <Main {...props} />\n  const aboutView = (props) => <About {...props} />\n\n  return (\n      <div className = \"AppContainer\">\n        <div className=\"App\">\n          <Router>\n            <Switch>\n              {/*<Route exact path='/' render = {mainView} />*/}\n              <Route exact path='/' render = {pwsView} />\n              <Route exact path='/about' render = {aboutView} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n\nfunction convertToJSON(a) {\n  let nodes = []\n  let links = []\n\n  for(let i=0; i<a.length; i++) {\n      let name = a[i].name;\n      let id = a[i].vertex;\n      let group = a[i].degree;\n      let pubs = a[i].colaborators;\n      let adj = a[i].adj;\n      let data = {\n          \"id\": id,\n          \"name\": name,\n          \"group\": group,\n          \"pubs\": pubs\n      };\n      nodes.push(data);\n\n      for(let j=0; j<adj.length; j++) {\n          let source = id;\n          let target = adj[j];\n          let value = pubs;\n          let data = {\n              \"source\": source,\n              \"target\": target,\n              \"value\": value,\n          };\n          links.push(data);\n      }\n  }\n\n  let json = {\n      'nodes': nodes,\n      'links': links\n  };\n  return(json);\n}\n\n\n\n//  https://blog.logrocket.com/react-router-dom-set-up-essential-components-parameterized-routes-505dc93642f1/\n//  https://oakland.edu/enp/"]},"metadata":{},"sourceType":"module"}