{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport './Main.css';\nimport erdosData from '../data/erdos.json';\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllAuthors().then(authors => {\n        this.setState({\n          authors: authors.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.getErdosData = () => {\n      //  Read in the node and link data from the database\n      let jsonData = this.convertToJSON(this.state.authors);\n      console.log(jsonData); //nodes = jsonData['nodes'];\n      //links = jsonData['links'];\n\n      nodes = erdosData.nodes;\n      links = erdosData.links; //console.log(this.state.authors);\n    };\n\n    this.convertToJSON = a => {\n      let nodes = [];\n      let links = [];\n\n      for (let i = 0; i < a.length; i++) {\n        let name = a[i].name;\n        let id = a[i].vertex;\n        let group = a[i].degree;\n        let pubs = a[i].colaborators;\n        let adj = a[i].adj;\n        let data = {\n          \"id\": id,\n          \"name\": name,\n          \"group\": group,\n          \"pubs\": pubs\n        };\n        nodes.push(data);\n\n        for (let j = 0; j < adj.length; j++) {\n          let source = id;\n          let target = adj[j];\n          let value = pubs;\n          let data = {\n            \"source\": source,\n            \"target\": target,\n            \"value\": value\n          };\n          links.push(data);\n        }\n      } //console.log(nodes); console.log(links);\n\n\n      let json = {\n        'nodes': nodes,\n        'links': links\n      };\n      return json;\n    };\n\n    this.makeOptionList = () => {\n      let buffer = [];\n\n      for (let i = 0; i < nodes.length; i++) {\n        buffer.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: nodes[i].name,\n          key: nodes[i].name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return buffer;\n    };\n\n    this.authorClick = () => {\n      //console.log(\"value of input field : \"+this.state.author);\n      this.props.dispatch({\n        type: 'AUTHOR_SEARCH',\n        payload: {\n          data: this.state.author\n        }\n      });\n    };\n\n    this.clearAuthor = () => {\n      /*this.setState({\n              author: ''\n          }, () => {\n              console.log(\"value of input field : \"+this.state.author);\n          }\n      )*/\n    };\n\n    this.updateInputValue = evt => {\n      this.setState({\n        author: evt.target.value\n      });\n    };\n\n    this.authorClick = this.authorClick.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.state = {\n      author: '',\n      authors: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    this.getErdosData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, \"Erdos Number 1 Collaboration Graph Display \")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, \"About\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"authorSelection\",\n      list: \"authors\",\n      placeholder: \"Choose author...\",\n      size: \"large\",\n      onChange: this.updateInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, this.makeOptionList()), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.clearAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.authorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"Find\")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '1px solid white',\n        width: '95%',\n        float: 'none',\n        margin: '0 auto',\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ForceGraphContainer, {\n      linksData: links,\n      nodesData: nodes,\n      author: this.state.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js"],"names":["React","Component","connect","Link","Input","Button","Grid","ForceGraphContainer","api","erdosData","nodes","links","mapStateToProps","state","Main","constructor","props","componentDidMount","setState","isLoading","getAllAuthors","then","authors","data","getErdosData","jsonData","convertToJSON","console","log","a","i","length","name","id","vertex","group","degree","pubs","colaborators","adj","push","j","source","target","value","json","makeOptionList","buffer","authorClick","dispatch","type","payload","author","clearAuthor","updateInputValue","evt","bind","render","border","width","float","margin","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport './Main.css';\nimport erdosData from '../data/erdos.json'; \n\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({\n});\n\nclass Main extends Component {\n \n    constructor(props) {\n    super(props);\n        this.authorClick = this.authorClick.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.state = {\n            author: '',\n            authors: [],\n            isLoading: false,\n        }\n    };\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllAuthors().then(authors => {\n            this.setState({\n                authors: authors.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    getErdosData = () => {\n        //  Read in the node and link data from the database\n        let jsonData = this.convertToJSON(this.state.authors);\n        console.log(jsonData);\n        //nodes = jsonData['nodes'];\n        //links = jsonData['links'];\n         nodes = erdosData.nodes;\n         links = erdosData.links;\n         //console.log(this.state.authors);\n    }\n\n    convertToJSON = (a) => {\n        let nodes = []\n        let links = []\n        for(let i=0; i<a.length; i++) {\n            let name = a[i].name;\n            let id = a[i].vertex;\n            let group = a[i].degree;\n            let pubs = a[i].colaborators;\n            let adj = a[i].adj;\n            let data = {\n                \"id\": id,\n                \"name\": name,\n                \"group\": group,\n                \"pubs\": pubs\n            };\n            nodes.push(data);\n            for(let j=0; j<adj.length; j++) {\n                let source = id;\n                let target = adj[j];\n                let value = pubs;\n                let data = {\n                    \"source\": source,\n                    \"target\": target,\n                    \"value\": value,\n                };\n                links.push(data);\n            }\n        }\n//console.log(nodes); console.log(links);\n        let json = {\n            'nodes': nodes,\n            'links': links\n        };\n        return(json);\n    }\n\n    makeOptionList = () => {\n        let buffer = [];\n        for(let i=0; i<nodes.length; i++) {\n            buffer.push(<option value={nodes[i].name} key={nodes[i].name}/>);\n        }\n        return(buffer);\n    }\n\n    authorClick = () => {\n        //console.log(\"value of input field : \"+this.state.author);\n        this.props.dispatch({\n            type: 'AUTHOR_SEARCH',\n            payload: { data: this.state.author}\n        })\n    }\n\n    clearAuthor = () => {\n        /*this.setState({\n                author: ''\n            }, () => {\n                console.log(\"value of input field : \"+this.state.author);\n            }\n        )*/\n    }\n\n    updateInputValue = (evt) => {\n        this.setState({author: evt.target.value});\n    }\n\n    render () {\n        this.getErdosData();\n\n        return (\n            <div>\n                <Grid >\n                    <Grid.Row> </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <div className=\"Main-header\">\n                                <p>Erdos Number 1 Collaboration Graph Display </p>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            <Button size='big'>\n                                <Link to=\"/about\">About</Link>\n                            </Button>\n                        </Grid.Column>\n                        <Grid.Column></Grid.Column>\n                        <Grid.Column>\n                            <div>\n                                <Input  id='authorSelection' \n                                        list='authors' \n                                        placeholder='Choose author...' \n                                        size='large'\n                                        onChange={this.updateInputValue}\n                                />\n                                <datalist id='authors'>\n                                    {this.makeOptionList()}\n                                </datalist>\n                                <Button size='large' onClick={this.clearAuthor}>Clear</Button>\n                                <Button size='large' onClick={this.authorClick}>Find</Button>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row >\n                        <Grid.Column>\n                            <div \n                                 style={{border:'1px solid white', width: '95%', float: 'none', margin: '0 auto', overflow: 'auto'}}>\n                                <ForceGraphContainer linksData={links} \n                                                     nodesData={nodes} \n                                                     author={this.state.author} />\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}