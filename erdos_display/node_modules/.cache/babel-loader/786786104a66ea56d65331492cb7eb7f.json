{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport './Main.css';\nimport erdosData from '../data/erdos.json';\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getErdosData = () => {\n      //  Read in the node and link data from the database\n      //this.mongoDBRead();\n      //this.convertToJSON();\n      nodes = erdosData.nodes;\n      links = erdosData.links;\n    };\n\n    this.makeOptionList = () => {\n      let buffer = [];\n\n      for (let i = 0; i < nodes.length; i++) {\n        buffer.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: nodes[i].name,\n          key: nodes[i].name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return buffer;\n    };\n\n    this.authorClick = () => {\n      console.log(\"value of input field : \" + this.state.author);\n      this.props.dispatch({\n        type: 'AUTHOR_SEARCH',\n        payload: {\n          data: this.state.author\n        }\n      });\n    };\n\n    this.clearAuthor = () => {\n      /*this.setState({\n              author: ''\n          }, () => {\n              console.log(\"value of input field : \"+this.state.author);\n          }\n      )*/\n    };\n\n    this.updateInputValue = evt => {\n      this.setState({\n        author: evt.target.value\n      });\n    };\n\n    this.authorClick = this.authorClick.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.state = {\n      author: ''\n    };\n  }\n\n  render() {\n    this.getErdosData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"Erdos Number 1 Collaboration Graph Display \")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, \"About\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"authorSelection\",\n      list: \"authors\",\n      placeholder: \"Choose author...\",\n      size: \"large\",\n      onChange: this.updateInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, this.makeOptionList()), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.clearAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.authorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"Find\")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '1px solid white',\n        width: '95%',\n        float: 'none',\n        margin: '0 auto',\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ForceGraphContainer, {\n      linksData: links,\n      nodesData: nodes,\n      author: this.state.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js"],"names":["React","Component","connect","Link","Input","Button","Grid","ForceGraphContainer","erdosData","nodes","links","mapStateToProps","state","Main","constructor","props","getErdosData","makeOptionList","buffer","i","length","push","name","authorClick","console","log","author","dispatch","type","payload","data","clearAuthor","updateInputValue","evt","setState","target","value","bind","render","border","width","float","margin","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport './Main.css';\nimport erdosData from '../data/erdos.json'; \n\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({\n});\n\nclass Main extends Component {\n \n    constructor(props) {\n    super(props);\n        this.authorClick = this.authorClick.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.state = {\n            author: '',\n        }\n    };\n\n    getErdosData = () => {\n        //  Read in the node and link data from the database\n        //this.mongoDBRead();\n        //this.convertToJSON();\n         nodes = erdosData.nodes;\n         links = erdosData.links;\n    }\n\n    makeOptionList = () => {\n        let buffer = [];\n        for(let i=0; i<nodes.length; i++) {\n            buffer.push(<option value={nodes[i].name} key={nodes[i].name}/>);\n        }\n        return(buffer);\n    }\n\n    authorClick = () => {\n        console.log(\"value of input field : \"+this.state.author);\n        this.props.dispatch({\n            type: 'AUTHOR_SEARCH',\n            payload: { data: this.state.author}\n        })\n    }\n\n    clearAuthor = () => {\n        /*this.setState({\n                author: ''\n            }, () => {\n                console.log(\"value of input field : \"+this.state.author);\n            }\n        )*/\n    }\n\n    updateInputValue = (evt) => {\n        this.setState({author: evt.target.value});\n    }\n\n    render () {\n        this.getErdosData();\n        return (\n            <div>\n                <Grid >\n                    <Grid.Row> </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <div className=\"Main-header\">\n                                <p>Erdos Number 1 Collaboration Graph Display </p>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            <Button size='big'>\n                                <Link to=\"/about\">About</Link>\n                            </Button>\n                        </Grid.Column>\n                        <Grid.Column></Grid.Column>\n                        <Grid.Column>\n                            <div>\n                                <Input  id='authorSelection' \n                                        list='authors' \n                                        placeholder='Choose author...' \n                                        size='large'\n                                        onChange={this.updateInputValue}\n                                />\n                                <datalist id='authors'>\n                                    {this.makeOptionList()}\n                                </datalist>\n                                <Button size='large' onClick={this.clearAuthor}>Clear</Button>\n                                <Button size='large' onClick={this.authorClick}>Find</Button>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row >\n                        <Grid.Column>\n                            <div \n                                 style={{border:'1px solid white', width: '95%', float: 'none', margin: '0 auto', overflow: 'auto'}}>\n                                <ForceGraphContainer linksData={links} nodesData={nodes} author={this.state.author}/>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}