{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let json = JSON.stringify(nodes);\n      console.log(json);\n      let links = this.props.data.links; //console.log(nodes);\n\n      const data = [2, 4, 2, 6, 8];\n      this.drawForceGraph(data, nodes, links);\n    };\n\n    this.drawForceGraph = (data, nodes, links) => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      const svgCanvas = d3.select(this.refs.canvas).append('svg').attr('width', width).attr('height', height).style('border', '1px solid black');\n      const simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2)); //d3.json(data, function(error, graph) {\n      //});\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph;","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","ForceGraph","componentDidMount","nodes","props","data","json","JSON","stringify","console","log","links","drawForceGraph","width","height","scale","svgCanvas","select","refs","canvas","append","attr","style","simulation","forceSimulation","force","forceLink","id","d","forceManyBody","forceCenter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAGA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BG,iBAF+B,GAEX,MAAM;AACxB,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAA5B;AACA,UAAIG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAIK,KAAK,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBM,KAA5B,CAJwB,CAKxB;;AACA,YAAMN,IAAI,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAAb;AACA,WAAKO,cAAL,CAAoBP,IAApB,EAA0BF,KAA1B,EAAiCQ,KAAjC;AACD,KAV8B;;AAAA,SAY/BC,cAZ+B,GAYd,CAACP,IAAD,EAAOF,KAAP,EAAcQ,KAAd,KAAyB;AACxC;AACA;AACA,YAAME,KAAK,GAAG,IAAd;AACA,YAAMC,MAAM,GAAG,GAAf;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMC,SAAS,GAAGhB,EAAE,CAACiB,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACGC,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiBR,KAFjB,EAGGQ,IAHH,CAGQ,QAHR,EAGkBP,MAHlB,EAIGQ,KAJH,CAIS,QAJT,EAImB,iBAJnB,CAAlB;AAMA,YAAMC,UAAU,GAAIvB,EAAE,CAACwB,eAAH,GACCC,KADD,CACO,MADP,EACezB,EAAE,CAAC0B,SAAH,GAAeC,EAAf,CAAkB,UAASC,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACD,EAAT;AAAc,OAA9C,CADf,EAECF,KAFD,CAEO,QAFP,EAEiBzB,EAAE,CAAC6B,aAAH,EAFjB,EAGCJ,KAHD,CAGO,QAHP,EAGiBzB,EAAE,CAAC8B,WAAH,CAAejB,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,CAHjB,CAApB,CAZwC,CAiBxC;AACA;AAGD,KAjC8B;AAAA;;AAmC/BiB,EAAAA,MAAM,GAAG;AAEP,wBACA;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGD;;AAxC8B;;AA4CnC,eAAe9B,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\n\nclass ForceGraph extends Component {\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let json = JSON.stringify(nodes);  \n      console.log(json);  \n      let links = this.props.data.links;\n      //console.log(nodes);\n      const data = [ 2, 4, 2, 6, 8 ]\n      this.drawForceGraph(data, nodes, links)\n    }\n\n    drawForceGraph = (data, nodes, links)  => {\n      //const width = document.getElementById(\"force\").innerWidth;\n      //const height = document.getElementById(\"force\").innerHeight;\n      const width = 1000;\n      const height = 400;\n      const scale = 20;\n      const svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height)\n                          .style('border', '1px solid black');\n\n      const simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n      //d3.json(data, function(error, graph) {\n      //});\n\n\n    }\n\n    render() { \n\n      return (\n      <div ref=\"canvas\"></div> \n      )\n    };\n\n}\n\nexport default ForceGraph;\n"]},"metadata":{},"sourceType":"module"}