{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nconst w = 1283;\nconst h = 1000; //const h = document.getElementById(\"#force\").innerHeight\n\nconst generateDataset = () => Array(10).fill(0).map(() => [Math.random() * 80 + 10, Math.random() * 35 + 10]);\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      this.drawForceGraph(nodes, links);\n    };\n\n    this.drawForceGraph = (nodes, links) => {\n      //console.log(nodes);\n      //console.log(links);\n      let width = w;\n      let height = h;\n\n      function ticked() {\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n        node.attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        });\n      }\n\n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      let svgCanvas = d3.select(this.refs.canvas).append('svg').attr('width', width).attr('height', height);\n      let simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      let node = svgCanvas.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        return Math.sqrt(d.pubs) * 1.5;\n      }).style(\"stroke\", \"gray\").attr(\"fill\", \"#0099ff\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n      let link = svgCanvas.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(links).attr(\"stroke\", \"#aaa\").enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value) / 4;\n      });\n      node.append(\"title\").text(function (d) {\n        let dc = '';\n        let name = ';';\n\n        if (d.name.indexOf('*') !== -1) {\n          name = d.name.replace('*', '');\n          dc = ' (DECEASED)';\n        } else {\n          name = d.name;\n        }\n\n        name = name.concat(dc);\n        let text = name.concat(\"\\n \");\n        text = text.concat(d.pubs);\n        text = text.concat(\" Coauthor(s) with Erdos number 2\");\n        return text;\n      });\n      simulation.nodes(nodes).on(\"tick\", ticked);\n      simulation.force(\"link\").links(links);\n    };\n  }\n\n  render() {\n    console.log(generateDataset());\n    s;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default ForceGraph; //  <div><svg> <circle cx=\"150\" cy=\"77\" r=\"40\" /> </svg></div>","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","w","h","generateDataset","Array","fill","map","Math","random","ForceGraph","componentDidMount","nodes","props","data","links","drawForceGraph","width","height","ticked","link","attr","d","source","x","y","target","node","dragstarted","event","active","simulation","alphaTarget","restart","fx","fy","dragged","dragended","svgCanvas","select","refs","canvas","append","forceSimulation","force","forceLink","id","forceManyBody","forceCenter","selectAll","enter","sqrt","pubs","style","call","drag","on","value","text","dc","name","indexOf","replace","concat","render","console","log","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,MAAMC,CAAC,GAAG,IAAV;AACA,MAAMC,CAAC,GAAG,IAAV,C,CACA;;AAEA,MAAMC,eAAe,GAAG,MACtBC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,EAAkBC,GAAlB,CAAsB,MAAO,CAC3BC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EADM,EAE3BD,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EAFM,CAA7B,CADF;;AAOA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BW,iBAF+B,GAEX,MAAM;AACxB,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAA5B;AACA,UAAIG,KAAK,GAAG,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,KAA5B;AAEA,WAAKC,cAAL,CAAoBJ,KAApB,EAA2BG,KAA3B;AACD,KAP8B;;AAAA,SAS/BC,cAT+B,GASd,CAACJ,KAAD,EAAQG,KAAR,KAAmB;AAClC;AACA;AACA,UAAIE,KAAK,GAAGf,CAAZ;AACA,UAAIgB,MAAM,GAAGf,CAAb;;AAEA,eAASgB,MAAT,GAAkB;AAChBC,QAAAA,IAAI,CACCC,IADL,CACU,IADV,EACgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACC,MAAF,CAASC,CAAhB;AAAoB,SADlD,EAEKH,IAFL,CAEU,IAFV,EAEgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACC,MAAF,CAASE,CAAhB;AAAoB,SAFlD,EAGKJ,IAHL,CAGU,IAHV,EAGgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACI,MAAF,CAASF,CAAhB;AAAoB,SAHlD,EAIKH,IAJL,CAIU,IAJV,EAIgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACI,MAAF,CAASD,CAAhB;AAAoB,SAJlD;AAMAE,QAAAA,IAAI,CACCN,IADL,CACU,IADV,EACgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACE,CAAT;AAAa,SAD3C,EAEKH,IAFL,CAEU,IAFV,EAEgB,UAASC,CAAT,EAAY;AAAE,iBAAOA,CAAC,CAACG,CAAT;AAAa,SAF3C;AAGD;;AAED,eAASG,WAAT,CAAqBN,CAArB,EAAwB;AACtB,YAAI,CAACrB,EAAE,CAAC4B,KAAH,CAASC,MAAd,EAAsBC,UAAU,CAACC,WAAX,CAAuB,GAAvB,EAA4BC,OAA5B;AAClBX,QAAAA,CAAC,CAACY,EAAF,GAAOZ,CAAC,CAACE,CAAT;AACAF,QAAAA,CAAC,CAACa,EAAF,GAAOb,CAAC,CAACG,CAAT;AACL;;AAED,eAASW,OAAT,CAAiBd,CAAjB,EAAoB;AAChBA,QAAAA,CAAC,CAACY,EAAF,GAAOjC,EAAE,CAAC4B,KAAH,CAASL,CAAhB;AACAF,QAAAA,CAAC,CAACa,EAAF,GAAOlC,EAAE,CAAC4B,KAAH,CAASJ,CAAhB;AACH;;AAED,eAASY,SAAT,CAAmBf,CAAnB,EAAsB;AAClB,YAAI,CAACrB,EAAE,CAAC4B,KAAH,CAASC,MAAd,EAAsBC,UAAU,CAACC,WAAX,CAAuB,CAAvB;AAClBV,QAAAA,CAAC,CAACY,EAAF,GAAO,IAAP;AACAZ,QAAAA,CAAC,CAACa,EAAF,GAAO,IAAP;AACP;;AAED,UAAIG,SAAS,GAAGrC,EAAE,CAACsC,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACKC,MADL,CACY,KADZ,EAEKrB,IAFL,CAEU,OAFV,EAEmBJ,KAFnB,EAGKI,IAHL,CAGU,QAHV,EAGoBH,MAHpB,CAAhB;AAOA,UAAIa,UAAU,GAAI9B,EAAE,CAAC0C,eAAH,GACGC,KADH,CACS,MADT,EACiB3C,EAAE,CAAC4C,SAAH,GAAeC,EAAf,CAAkB,UAASxB,CAAT,EAAY;AAAE,eAAOA,CAAC,CAACwB,EAAT;AAAc,OAA9C,CADjB,EAEGF,KAFH,CAES,QAFT,EAEmB3C,EAAE,CAAC8C,aAAH,EAFnB,EAGGH,KAHH,CAGS,QAHT,EAGmB3C,EAAE,CAAC+C,WAAH,CAAe/B,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,CAHnB,CAAlB;AAKA,UAAIS,IAAI,GAAGW,SAAS,CAACI,MAAV,CAAiB,GAAjB,EACUrB,IADV,CACe,OADf,EACwB,OADxB,EAEU4B,SAFV,CAEoB,QAFpB,EAGUnC,IAHV,CAGeF,KAHf,EAIUsC,KAJV,GAIkBR,MAJlB,CAIyB,QAJzB,EAKUrB,IALV,CAKe,GALf,EAKoB,UAASC,CAAT,EAAY;AACX,eAAOd,IAAI,CAAC2C,IAAL,CAAU7B,CAAC,CAAC8B,IAAZ,IAAkB,GAAzB;AACX,OAPV,EAQUC,KARV,CAQgB,QARhB,EAQ0B,MAR1B,EASUhC,IATV,CASe,MATf,EASuB,SATvB,EAUUiC,IAVV,CAUerD,EAAE,CAACsD,IAAH,GACLC,EADK,CACF,OADE,EACO5B,WADP,EAEL4B,EAFK,CAEF,MAFE,EAEMpB,OAFN,EAGLoB,EAHK,CAGF,KAHE,EAGKnB,SAHL,CAVf,CAAX;AAeA,UAAIjB,IAAI,GAAGkB,SAAS,CAACI,MAAV,CAAiB,GAAjB,EACUrB,IADV,CACe,OADf,EACwB,OADxB,EAEU4B,SAFV,CAEoB,MAFpB,EAGUnC,IAHV,CAGeC,KAHf,EAIUM,IAJV,CAIe,QAJf,EAIyB,MAJzB,EAKU6B,KALV,GAKkBR,MALlB,CAKyB,MALzB,EAMUrB,IANV,CAMe,cANf,EAM+B,UAASC,CAAT,EAAY;AAAE,eAAOd,IAAI,CAAC2C,IAAL,CAAU7B,CAAC,CAACmC,KAAZ,IAAqB,CAA5B;AAAgC,OAN7E,CAAX;AAQA9B,MAAAA,IAAI,CAACe,MAAL,CAAY,OAAZ,EACKgB,IADL,CACU,UAASpC,CAAT,EAAY;AACd,YAAIqC,EAAE,GAAG,EAAT;AACA,YAAIC,IAAI,GAAG,GAAX;;AACA,YAAItC,CAAC,CAACsC,IAAF,CAAOC,OAAP,CAAe,GAAf,MAAwB,CAAC,CAA7B,EAAgC;AAC9BD,UAAAA,IAAI,GAAGtC,CAAC,CAACsC,IAAF,CAAOE,OAAP,CAAe,GAAf,EAAoB,EAApB,CAAP;AACAH,UAAAA,EAAE,GAAG,aAAL;AACD,SAHD,MAIK;AACHC,UAAAA,IAAI,GAAGtC,CAAC,CAACsC,IAAT;AACD;;AACDA,QAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYJ,EAAZ,CAAP;AACA,YAAID,IAAI,GAAGE,IAAI,CAACG,MAAL,CAAY,KAAZ,CAAX;AACAL,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAL,CAAYzC,CAAC,CAAC8B,IAAd,CAAP;AACAM,QAAAA,IAAI,GAAGA,IAAI,CAACK,MAAL,CAAY,kCAAZ,CAAP;AACA,eAAOL,IAAP;AACH,OAhBL;AAkBA3B,MAAAA,UAAU,CAACnB,KAAX,CAAiBA,KAAjB,EACW4C,EADX,CACc,MADd,EACsBrC,MADtB;AAGAY,MAAAA,UAAU,CAACa,KAAX,CAAiB,MAAjB,EACW7B,KADX,CACiBA,KADjB;AAGD,KAvG8B;AAAA;;AAyG/BiD,EAAAA,MAAM,GAAG;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY9D,eAAe,EAA3B;AAA+B+D,IAAAA,CAAC;AAC1B,wBACE;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9G8B;;AAkHnC,eAAezD,UAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nconst w = 1283;\nconst h = 1000;\n//const h = document.getElementById(\"#force\").innerHeight\n\nconst generateDataset = () => (\n  Array(10).fill(0).map(() => ([\n    Math.random() * 80 + 10,\n    Math.random() * 35 + 10,\n  ]))\n)\n\nclass ForceGraph extends Component {\n\n    componentDidMount = () => {\n      let nodes = this.props.data.nodes;\n      let links = this.props.data.links;\n      \n      this.drawForceGraph(nodes, links);\n    }\n\n    drawForceGraph = (nodes, links)  => {\n      //console.log(nodes);\n      //console.log(links);\n      let width = w;\n      let height = h;\n\n      function ticked() {\n        link\n            .attr(\"x1\", function(d) { return d.source.x; })\n            .attr(\"y1\", function(d) { return d.source.y; })\n            .attr(\"x2\", function(d) { return d.target.x; })\n            .attr(\"y2\", function(d) { return d.target.y; });\n    \n        node\n            .attr(\"cx\", function(d) { return d.x; })\n            .attr(\"cy\", function(d) { return d.y; });\n      }\n    \n      function dragstarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n      }\n      \n      function dragged(d) {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n      }\n      \n      function dragended(d) {\n          if (!d3.event.active) simulation.alphaTarget(0);\n              d.fx = null;\n              d.fy = null;\n      }\n \n      let svgCanvas = d3.select(this.refs.canvas)\n                          .append('svg')\n                          .attr('width', width)\n                          .attr('height', height);\n\n\n\n      let simulation =  d3.forceSimulation()\n                          .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                          .force(\"charge\", d3.forceManyBody())\n                          .force(\"center\", d3.forceCenter(width / 2, height / 2));\n                         \n      let node = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"nodes\")\n                          .selectAll(\"circle\")\n                          .data(nodes)\n                          .enter().append(\"circle\")\n                          .attr(\"r\", function(d) {\n                                      return Math.sqrt(d.pubs)*1.5;\n                          })\n                          .style(\"stroke\", \"gray\")\n                          .attr(\"fill\", \"#0099ff\")\n                          .call(d3.drag()\n                          .on(\"start\", dragstarted)\n                          .on(\"drag\", dragged)\n                          .on(\"end\", dragended));\n\n      let link = svgCanvas.append(\"g\")\n                          .attr(\"class\", \"links\")\n                          .selectAll(\"line\")\n                          .data(links)\n                          .attr(\"stroke\", \"#aaa\")\n                          .enter().append(\"line\")\n                          .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 4; });\n\n      node.append(\"title\")\n          .text(function(d) {\n              let dc = '';\n              let name = ';'\n              if (d.name.indexOf('*') !== -1) {\n                name = d.name.replace('*', '');\n                dc = ' (DECEASED)';\n              }\n              else {\n                name = d.name;\n              }\n              name = name.concat(dc);\n              let text = name.concat(\"\\n \");\n              text = text.concat(d.pubs);\n              text = text.concat(\" Coauthor(s) with Erdos number 2\");\n              return text;\n          });\n\n      simulation.nodes(nodes)\n                .on(\"tick\", ticked);\n\n      simulation.force(\"link\")\n                .links(links);\n\n    }\n\n    render() { \nconsole.log(generateDataset());s\n      return (\n        <div ref=\"canvas\"></div>\n      )\n    };\n\n}\n\nexport default ForceGraph;\n\n//  <div><svg> <circle cx=\"150\" cy=\"77\" r=\"40\" /> </svg></div>\n"]},"metadata":{},"sourceType":"module"}