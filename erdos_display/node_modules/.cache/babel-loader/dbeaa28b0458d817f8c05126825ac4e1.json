{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport './Main.css'; //import erdosData from '../data/erdos.json'; \n\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllAuthors().then(authors => {\n        this.setState({\n          authors: authors.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.getErdosData = () => {\n      //  Read in the node and link data from the database\n      let jsonData = this.convertToJSON(this.state.authors); //this.setState({nodes: jsonData.nodes});\n      //this.setState({links: jsonData.links});\n\n      nodes = jsonData.nodes;\n      links = jsonData.links; //nodes = erdosData.nodes;\n      //links = erdosData.links;\n    };\n\n    this.convertToJSON = a => {\n      let nodes = [];\n      let links = [];\n\n      for (let i = 0; i < a.length; i++) {\n        let name = a[i].name;\n        let id = a[i].vertex;\n        let group = a[i].degree;\n        let pubs = a[i].colaborators;\n        let adj = a[i].adj;\n        let data = {\n          \"id\": id,\n          \"name\": name,\n          \"group\": group,\n          \"pubs\": pubs\n        };\n        nodes.push(data);\n\n        for (let j = 0; j < adj.length; j++) {\n          let source = id;\n          let target = adj[j];\n          let value = pubs;\n          let data = {\n            \"source\": source,\n            \"target\": target,\n            \"value\": value\n          };\n          links.push(data);\n        }\n      }\n\n      let json = {\n        'nodes': nodes,\n        'links': links\n      };\n      return json;\n    };\n\n    this.makeOptionList = () => {\n      let buffer = [];\n\n      for (let i = 0; i < nodes.length; i++) {\n        buffer.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: nodes[i].name,\n          key: nodes[i].name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return buffer;\n    };\n\n    this.authorClick = () => {\n      //console.log(\"value of input field : \"+this.state.author);\n      this.props.dispatch({\n        type: 'AUTHOR_SEARCH',\n        payload: {\n          data: this.state.author\n        }\n      });\n    };\n\n    this.clearAuthor = () => {\n      /*this.setState({\n              author: ''\n          }, () => {\n              console.log(\"value of input field : \"+this.state.author);\n          }\n      )*/\n    };\n\n    this.updateInputValue = evt => {\n      this.setState({\n        author: evt.target.value\n      });\n    };\n\n    this.authorClick = this.authorClick.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.state = {\n      author: '',\n      authors: [],\n      //nodes: [],\n      //links: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    //this.getErdosData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, \"Erdos Number 1 Collaboration Graph Display \")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \"About\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"authorSelection\",\n      list: \"authors\",\n      placeholder: \"Choose author...\",\n      size: \"large\",\n      onChange: this.updateInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, this.makeOptionList()), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.clearAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      onClick: this.authorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \"Find\")))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '1px solid white',\n        width: '95%',\n        float: 'none',\n        margin: '0 auto',\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ForceGraphContainer, {\n      linksData: links,\n      nodesData: nodes,\n      author: this.state.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/Main.js"],"names":["React","Component","connect","Link","Input","Button","Grid","ForceGraphContainer","api","nodes","links","mapStateToProps","state","Main","constructor","props","componentDidMount","setState","isLoading","getAllAuthors","then","authors","data","getErdosData","jsonData","convertToJSON","a","i","length","name","id","vertex","group","degree","pubs","colaborators","adj","push","j","source","target","value","json","makeOptionList","buffer","authorClick","dispatch","type","payload","author","clearAuthor","updateInputValue","evt","bind","render","border","width","float","margin","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport './Main.css';\n//import erdosData from '../data/erdos.json'; \n\nlet nodes = [];\nlet links = [];\n\nconst mapStateToProps = state => ({\n});\n\nclass Main extends Component {\n \n    constructor(props) {\n    super(props);\n        this.authorClick = this.authorClick.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.state = {\n            author: '',\n            authors: [],\n            //nodes: [],\n            //links: [],\n            isLoading: false,\n        }\n    };\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllAuthors().then(authors => {\n            this.setState({\n                authors: authors.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    getErdosData = () => {\n        //  Read in the node and link data from the database\n        let jsonData = this.convertToJSON(this.state.authors);\n        //this.setState({nodes: jsonData.nodes});\n        //this.setState({links: jsonData.links});\n        nodes = jsonData.nodes;\n        links = jsonData.links;\n        //nodes = erdosData.nodes;\n        //links = erdosData.links;\n    }\n\n    convertToJSON = (a) => {\n        let nodes = []\n        let links = []\n\n        for(let i=0; i<a.length; i++) {\n            let name = a[i].name;\n            let id = a[i].vertex;\n            let group = a[i].degree;\n            let pubs = a[i].colaborators;\n            let adj = a[i].adj;\n            let data = {\n                \"id\": id,\n                \"name\": name,\n                \"group\": group,\n                \"pubs\": pubs\n            };\n            nodes.push(data);\n\n            for(let j=0; j<adj.length; j++) {\n                let source = id;\n                let target = adj[j];\n                let value = pubs;\n                let data = {\n                    \"source\": source,\n                    \"target\": target,\n                    \"value\": value,\n                };\n                links.push(data);\n            }\n        }\n\n        let json = {\n            'nodes': nodes,\n            'links': links\n        };\n        return(json);\n    }\n\n    makeOptionList = () => {\n        let buffer = [];\n        for(let i=0; i<nodes.length; i++) {\n            buffer.push(<option value={nodes[i].name} key={nodes[i].name}/>);\n        }\n        return(buffer);\n    }\n\n    authorClick = () => {\n        //console.log(\"value of input field : \"+this.state.author);\n        this.props.dispatch({\n            type: 'AUTHOR_SEARCH',\n            payload: { data: this.state.author}\n        })\n    }\n\n    clearAuthor = () => {\n        /*this.setState({\n                author: ''\n            }, () => {\n                console.log(\"value of input field : \"+this.state.author);\n            }\n        )*/\n    }\n\n    updateInputValue = (evt) => {\n        this.setState({author: evt.target.value});\n    }\n\n    render () {\n        //this.getErdosData();\n\n        return (\n            <div>\n                <Grid >\n                    <Grid.Row> </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <div className=\"Main-header\">\n                                <p>Erdos Number 1 Collaboration Graph Display </p>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            <Button size='big'>\n                                <Link to=\"/about\">About</Link>\n                            </Button>\n                        </Grid.Column>\n                        <Grid.Column></Grid.Column>\n                        <Grid.Column>\n                            <div>\n                                <Input  id='authorSelection' \n                                        list='authors' \n                                        placeholder='Choose author...' \n                                        size='large'\n                                        onChange={this.updateInputValue}\n                                />\n                                <datalist id='authors'>\n                                    {this.makeOptionList()}\n                                </datalist>\n                                <Button size='large' onClick={this.clearAuthor}>Clear</Button>\n                                <Button size='large' onClick={this.authorClick}>Find</Button>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row >\n                        <Grid.Column>\n                            <div \n                                 style={{border:'1px solid white', width: '95%', float: 'none', margin: '0 auto', overflow: 'auto'}}>\n                                <ForceGraphContainer linksData={links} \n                                                     nodesData={nodes} \n                                                     author={this.state.author} />\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}