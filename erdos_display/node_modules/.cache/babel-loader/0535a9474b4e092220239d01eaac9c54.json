{"ast":null,"code":"import * as d3 from \"d3\";\nexport function runForceGraph(container, linksData, nodesData) {\n  const links = linksData.map(d => Object.assign({}, d));\n  const nodes = nodesData.map(d => Object.assign({}, d));\n  const containerRect = container.getBoundingClientRect();\n  const height = containerRect.height;\n  const width = containerRect.width;\n\n  const drag = simulation => {\n    const dragstarted = d => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    const dragged = d => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    const dragended = d => {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };\n\n    return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n  }; // Add the tooltip element to the graph\n\n\n  const tooltip = document.querySelector(\"#graph-tooltip\");\n\n  if (!tooltip) {\n    const tooltipDiv = document.createElement(\"div\"); //tooltipDiv.classList.add(styles.tooltip);\n\n    tooltipDiv.style.opacity = \"0\";\n    tooltipDiv.id = \"graph-tooltip\";\n    document.body.appendChild(tooltipDiv);\n  } //const div = d3.select(\"#graph-tooltip\");\n\n  /*const addTooltip = (hoverTooltip, d, x, y) => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n    div\n      .html(hoverTooltip(d))\n      .style(\"left\", `${x}px`)\n      .style(\"top\", `${y - 28}px`);\n  };*/\n\n  /*const removeTooltip = () => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0);\n  };*/\n\n\n  const getNodeColor = node => {\n    //return node.name === this.props.parent.data ? 'red' : '#0099ff'\n    return '#0099ff';\n  };\n\n  const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id)).force(\"charge\", d3.forceManyBody().strength(-150)).force(\"x\", d3.forceX()).force(\"y\", d3.forceY());\n  const svg = d3.select(container).append(\"svg\").attr(\"viewBox\", [-width / 2, -height / 2, width, height]).call(d3.zoom().on(\"zoom\", function () {\n    svg.attr(\"transform\", d3.event.transform);\n  }));\n  const link = svg.append(\"g\").attr(\"stroke\", \"#aaa\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(links).join(\"line\").attr(\"stroke-width\", function (d) {\n    return Math.sqrt(d.value) / 10;\n  });\n  const node = svg.append(\"g\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).selectAll(\"circle\").data(nodes).join(\"circle\").attr(\"r\", function (d) {\n    return Math.sqrt(d.pubs) * 1.5;\n  }).attr(\"fill\", getNodeColor).call(drag(simulation));\n  node.append(\"title\").text(function (d) {\n    let dc = '';\n    let name = ';';\n\n    if (d.name.indexOf('*') !== -1) {\n      name = d.name.replace('*', '');\n      dc = ' (DECEASED)';\n    } else {\n      name = d.name;\n    }\n\n    name = name.concat(dc);\n    let text = name.concat(\"\\n \");\n    text = text.concat(d.pubs);\n    text = text.concat(\" Coauthor(s) with Erdos number 2\");\n    return text;\n  });\n  /*const label = svg.append(\"g\")\n    .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n    .data(nodes)\n    .enter()\n    .append(\"text\")\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'central')\n    .attr(\"class\", d => `fa ${getClass(d)}`)\n    .text(d => {return icon(d);})\n    .call(drag(simulation));\n   label.on(\"mouseover\", (d) => {\n    addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n  })\n    .on(\"mouseout\", () => {\n      removeTooltip();\n    });*/\n\n  simulation.on(\"tick\", () => {\n    //update link positions\n    link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y); // update node positions\n\n    node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y); // update label positions\n\n    /*label\n      .attr(\"x\", d => { return d.x; })\n      .attr(\"y\", d => { return d.y; })*/\n  });\n  return {\n    destroy: () => {\n      simulation.stop();\n    },\n    nodes: () => {\n      return svg.node();\n    }\n  };\n}","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraphGenerator.js"],"names":["d3","runForceGraph","container","linksData","nodesData","links","map","d","Object","assign","nodes","containerRect","getBoundingClientRect","height","width","drag","simulation","dragstarted","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragended","on","tooltip","document","querySelector","tooltipDiv","createElement","style","opacity","id","body","appendChild","getNodeColor","node","forceSimulation","force","forceLink","forceManyBody","strength","forceX","forceY","svg","select","append","attr","call","zoom","transform","link","selectAll","data","join","Math","sqrt","value","pubs","text","dc","name","indexOf","replace","concat","source","target","destroy","stop"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\nexport function runForceGraph(container, linksData, nodesData) \n{\n  const links = linksData.map((d) => Object.assign({}, d));\n  const nodes = nodesData.map((d) => Object.assign({}, d));\n\n  const containerRect = container.getBoundingClientRect();\n  const height = containerRect.height;\n  const width = containerRect.width;\n\n  const drag = (simulation) => {\n    const dragstarted = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    const dragged = (d) => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    const dragended = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  };\n\n  // Add the tooltip element to the graph\n  const tooltip = document.querySelector(\"#graph-tooltip\");\n  if (!tooltip) {\n    const tooltipDiv = document.createElement(\"div\");\n    //tooltipDiv.classList.add(styles.tooltip);\n    tooltipDiv.style.opacity = \"0\";\n    tooltipDiv.id = \"graph-tooltip\";\n    document.body.appendChild(tooltipDiv);\n  }\n  //const div = d3.select(\"#graph-tooltip\");\n\n  /*const addTooltip = (hoverTooltip, d, x, y) => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n    div\n      .html(hoverTooltip(d))\n      .style(\"left\", `${x}px`)\n      .style(\"top\", `${y - 28}px`);\n  };*/\n\n  /*const removeTooltip = () => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0);\n  };*/\n\n  const getNodeColor = (node) => {\n    //return node.name === this.props.parent.data ? 'red' : '#0099ff'\n    return('#0099ff')\n  }\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\"link\", d3.forceLink(links).id(d => d.id))\n    .force(\"charge\", d3.forceManyBody().strength(-150))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY());\n\n  const svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n    .call(d3.zoom().on(\"zoom\", function () {\n      svg.attr(\"transform\", d3.event.transform);\n    }));\n\n  const link = svg\n    .append(\"g\")\n    .attr(\"stroke\", \"#aaa\")\n    .attr(\"stroke-opacity\", 0.6)\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 10; });\n\n  const node = svg\n    .append(\"g\")\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 2)\n    .selectAll(\"circle\")\n    .data(nodes)\n    .join(\"circle\")\n    .attr(\"r\", function(d) {\n        return Math.sqrt(d.pubs)*1.5;\n    })\n    .attr(\"fill\", getNodeColor)\n    .call(drag(simulation));\n\nnode.append(\"title\")\n    .text(function(d) {\n        let dc = '';\n        let name = ';'\n        if (d.name.indexOf('*') !== -1) {\n          name = d.name.replace('*', '');\n          dc = ' (DECEASED)';\n        }\n        else {\n          name = d.name;\n        }\n        name = name.concat(dc);\n        let text = name.concat(\"\\n \");\n        text = text.concat(d.pubs);\n        text = text.concat(\" Coauthor(s) with Erdos number 2\");\n        return text;\n    });\n\n  /*const label = svg.append(\"g\")\n    .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n    .data(nodes)\n    .enter()\n    .append(\"text\")\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'central')\n    .attr(\"class\", d => `fa ${getClass(d)}`)\n    .text(d => {return icon(d);})\n    .call(drag(simulation));\n\n  label.on(\"mouseover\", (d) => {\n    addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n  })\n    .on(\"mouseout\", () => {\n      removeTooltip();\n    });*/\n\n  simulation.on(\"tick\", () => {\n    //update link positions\n    link\n      .attr(\"x1\", d => d.source.x)\n      .attr(\"y1\", d => d.source.y)\n      .attr(\"x2\", d => d.target.x)\n      .attr(\"y2\", d => d.target.y);\n\n    // update node positions\n    node\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y);\n\n    // update label positions\n    /*label\n      .attr(\"x\", d => { return d.x; })\n      .attr(\"y\", d => { return d.y; })*/\n  });\n\n  return {\n    destroy: () => {\n      simulation.stop();\n    },\n    nodes: () => {\n      return svg.node();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}