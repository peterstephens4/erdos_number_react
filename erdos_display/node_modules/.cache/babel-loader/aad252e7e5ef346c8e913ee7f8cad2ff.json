{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass ForceGraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.force = data => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const svg = d3.select('svg').attr('width', width).attr('height', height);\n      let simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      let link = svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(data.links).enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value) / 4;\n      });\n      let node = svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(data.nodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        return Math.sqrt(d.pubs) * 1.5;\n      }).attr(\"fill\", \"#0099ff\").call(d3.drag().on(\"start\", this.dragstarted).on(\"drag\", this.dragged).on(\"end\", this.dragended));\n      console.log(data.nodes);\n      console.log(data.links);\n\n      dragstarted = d => {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      };\n\n      dragged = d => {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      };\n\n      dragended = d => {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      };\n    };\n  }\n\n  render() {\n    let data = this.props.data;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.force(data));\n  }\n\n}\n\nexport default ForceGraph;\n/*\nclass ForceGraph extends Component {\n\n  greeting = 'Hello Function Component!';\n  data = this.props.data;\n\n  render () {\n    return (\n        <div>\n        <p>This file plots data the subgraph of the collaboration graph\n      induced by co-authors of Paul Erdos.  Its vertices are people\n      with Erdos number 1, and two authors are joined by an edge if\n      they have published a joint paper (with or without other collaborators).\n      Paul Erdos himself and people with Erdos number 2 are not included.\n      \n      Refference:   https://www.oakland.edu/enp/thedata/\n                    https://files.oakland.edu/users/grossman/enp/erdos1graph.html</p>\n          <p>For more information on the Erdos Number Project see the following link...</p>\n          <p>Force Graph</p>\n          <p>{this.greeting}</p>\n          <p>{this.data.nodes[0]['name']}</p>\n          <p>{this.data.links[0]['target']}</p>\n        </div>\n      );\n    };\n}\n\nexport default ForceGraph;\n\n*/","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/ForceGraph.js"],"names":["React","Component","d3","ForceGraph","force","data","width","window","innerWidth","height","innerHeight","svg","select","attr","simulation","forceSimulation","forceLink","id","d","forceManyBody","forceCenter","link","append","selectAll","links","enter","Math","sqrt","value","node","nodes","pubs","call","drag","on","dragstarted","dragged","dragended","console","log","event","active","alphaTarget","restart","fx","x","fy","y","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass ForceGraph extends Component {\n\n  force = (data) => {\n\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const svg = d3.select('svg')\n                  .attr('width', width)\n                  .attr('height', height);\n    let simulation =  d3.forceSimulation()\n                  .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n                  .force(\"charge\", d3.forceManyBody())\n                  .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    let link = svg.append(\"g\")\n                .attr(\"class\", \"links\")\n                .selectAll(\"line\")\n                .data(data.links)\n                .enter().append(\"line\")\n                .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value) / 4; });\n\n    let node = svg.append(\"g\")\n                .attr(\"class\", \"nodes\")\n                .selectAll(\"circle\")\n                .data(data.nodes)\n                .enter().append(\"circle\")\n                .attr(\"r\", function(d) {\n                            return Math.sqrt(d.pubs)*1.5;\n                })\n                .attr(\"fill\", \"#0099ff\")\n                .call(d3.drag()\n                .on(\"start\", this.dragstarted)\n                .on(\"drag\", this.dragged)\n                .on(\"end\", this.dragended)\n                );\n\n    console.log(data.nodes);\n    console.log(data.links);\n\n    dragstarted = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n    }\n    \n    dragged = (d) => {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n    }\n    \n    dragended = (d) => {\n        if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n    }  \n\n  }\n\n  render () {\n      let data = this.props.data;\n      return (\n        <div>\n          {this.force(data)}\n        </div>\n      );\n    };\n}\n\nexport default ForceGraph;\n\n\n/*\nclass ForceGraph extends Component {\n\n  greeting = 'Hello Function Component!';\n  data = this.props.data;\n\n  render () {\n    return (\n        <div>\n        <p>This file plots data the subgraph of the collaboration graph\n      induced by co-authors of Paul Erdos.  Its vertices are people\n      with Erdos number 1, and two authors are joined by an edge if\n      they have published a joint paper (with or without other collaborators).\n      Paul Erdos himself and people with Erdos number 2 are not included.\n      \n      Refference:   https://www.oakland.edu/enp/thedata/\n                    https://files.oakland.edu/users/grossman/enp/erdos1graph.html</p>\n          <p>For more information on the Erdos Number Project see the following link...</p>\n          <p>Force Graph</p>\n          <p>{this.greeting}</p>\n          <p>{this.data.nodes[0]['name']}</p>\n          <p>{this.data.links[0]['target']}</p>\n        </div>\n      );\n    };\n}\n\nexport default ForceGraph;\n\n*/"]},"metadata":{},"sourceType":"module"}