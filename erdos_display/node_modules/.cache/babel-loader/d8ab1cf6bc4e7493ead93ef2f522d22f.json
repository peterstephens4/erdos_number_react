{"ast":null,"code":"var _jsxFileName = \"/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/PWS.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid, GridColumn } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport erdosData from '../data/erdos.json'; //let nodes = erdosData.nodes;\n//let links = erdosData.links;\n\nlet nodes = [];\nlet links = [];\nlet author = '';\nexport function PWS() {\n  const [authors, setAuthors] = useState({});\n\n  const loadData = async () => {\n    const res = await api.getAllAuthors();\n    setAuthors((await res.data.data));\n    let jsonData = convertToJSON(res.data.data);\n    console.log(jsonData);\n    nodes = jsonData.nodes;\n    links = jsonData.links;\n  };\n\n  useEffect(() => {\n    loadData();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Main-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, \"Erdos Number 1 Collaboration Graph Display \")))), /*#__PURE__*/React.createElement(Grid.Row, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"About\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"authorSelection\",\n    list: \"authors\",\n    placeholder: \"Choose author...\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"authors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Find\")))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: '1px solid green',\n      width: '95%',\n      float: 'none',\n      margin: '0 auto',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ForceGraphContainer, {\n    linksData: links,\n    nodesData: nodes,\n    author: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nfunction convertToJSON(a) {\n  let nodes = [];\n  let links = [];\n\n  for (let i = 0; i < a.length; i++) {\n    let name = a[i].name;\n    let id = a[i].vertex;\n    let group = a[i].degree;\n    let pubs = a[i].colaborators;\n    let adj = a[i].adj;\n    let data = {\n      \"id\": id,\n      \"name\": name,\n      \"group\": group,\n      \"pubs\": pubs\n    };\n    nodes.push(data);\n\n    for (let j = 0; j < adj.length; j++) {\n      let source = id;\n      let target = adj[j];\n      let value = pubs;\n      let data = {\n        \"source\": source,\n        \"target\": target,\n        \"value\": value\n      };\n      links.push(data);\n    }\n  }\n\n  let json = {\n    'nodes': nodes,\n    'links': links\n  };\n  return json;\n}","map":{"version":3,"sources":["/Users/peterstephens/Documents/projects/erdos_number/erdos_display/src/components/PWS.js"],"names":["React","useEffect","useState","Link","Input","Button","Grid","GridColumn","ForceGraphContainer","api","erdosData","nodes","links","author","PWS","authors","setAuthors","loadData","res","getAllAuthors","data","jsonData","convertToJSON","console","log","border","width","float","margin","overflow","a","i","length","name","id","vertex","group","degree","pubs","colaborators","adj","push","j","source","target","value","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Grid, GridColumn } from 'semantic-ui-react';\nimport { ForceGraphContainer } from './ForceGraphContainer';\nimport api from '../api';\nimport erdosData from '../data/erdos.json';\n\n//let nodes = erdosData.nodes;\n//let links = erdosData.links;\nlet nodes = [];\nlet links = [];\nlet author = '';\n\nexport function PWS() {\n    const [authors, setAuthors] = useState({});\n    const loadData = async () => {\n        const res = await api.getAllAuthors();\n        setAuthors(await res.data.data);\n        let jsonData = convertToJSON(res.data.data);\n        console.log(jsonData);\n        nodes = jsonData.nodes;\n        links = jsonData.links;\n      };\n\n    useEffect(() => {\n        loadData();\n        return () => {};\n      }, []);\n\n    return (\n        <div>\n            <Grid >\n                <Grid.Row></Grid.Row>\n                <Grid.Row>\n                    <Grid.Column>\n                        <div className=\"Main-header\">\n                            <p>Erdos Number 1 Collaboration Graph Display </p>\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns={3}>\n                    <Grid.Column>\n                        <Button size='big'>\n                            <Link to=\"/about\">About</Link>\n                        </Button>\n                    </Grid.Column>\n                    <Grid.Column></Grid.Column>\n                    <Grid.Column>\n                        <div>\n                            <Input  id='authorSelection' \n                                    list='authors' \n                                    placeholder='Choose author...' \n                                    size='large'\n                            />\n                            <datalist id='authors'>\n                            </datalist>\n                            <Button size='large' >Clear</Button>\n                            <Button size='large' >Find</Button>\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row >\n                    <Grid.Column>\n                        <div \n                                style={{border:'1px solid green', width: '95%', float: 'none', margin: '0 auto', overflow: 'auto'}}>\n                            <ForceGraphContainer linksData={links} \n                                                    nodesData={nodes} \n                                                    author={author} />\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n            </Grid>\n        </div>\n    );\n}\n\nfunction convertToJSON(a) {\n    let nodes = []\n    let links = []\n\n    for(let i=0; i<a.length; i++) {\n        let name = a[i].name;\n        let id = a[i].vertex;\n        let group = a[i].degree;\n        let pubs = a[i].colaborators;\n        let adj = a[i].adj;\n        let data = {\n            \"id\": id,\n            \"name\": name,\n            \"group\": group,\n            \"pubs\": pubs\n        };\n        nodes.push(data);\n\n        for(let j=0; j<adj.length; j++) {\n            let source = id;\n            let target = adj[j];\n            let value = pubs;\n            let data = {\n                \"source\": source,\n                \"target\": target,\n                \"value\": value,\n            };\n            links.push(data);\n        }\n    }\n\n    let json = {\n        'nodes': nodes,\n        'links': links\n    };\n    return(json);\n}\n"]},"metadata":{},"sourceType":"module"}